[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://by025803sllra"]

[sub_resource type="Shader" id="Shader_d8cr1"]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;

const float WAVE_SPEED = 0.6;
const float WAVE_STRENGTH_X = 4.0;
const float WAVE_STRENGTH_Z = 2.0;


void vertex() {
	if (VERTEX.y > 0.1){
		VERTEX.y += (VERTEX.y) * WAVE_STRENGTH_X/8.0 * sin(TIME * WAVE_SPEED);
		VERTEX.z += (VERTEX.y) *WAVE_STRENGTH_Z/10.0 * cos(TIME * WAVE_SPEED);
	}
}

void fragment() {
	vec2 base_uv = UV;
	ALBEDO = albedo.rgb;
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_d8cr1")
shader_parameter/albedo = Color(1, 0, 0.0156863, 1)
