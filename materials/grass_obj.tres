[gd_resource type="ShaderMaterial" load_steps=3 format=3 uid="uid://bx25du4fnbgym"]

[ext_resource type="Texture2D" uid="uid://df5nbov7vwodp" path="res://assets/textures/grass_object/grass_summer.png" id="1_88ea0"]

[sub_resource type="Shader" id="Shader_fs28q"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float alpha_scissor_threshold;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;

const float WAVE_SPEED = 0.6;

const float WAVE_STRENGTH_X = 0.4;
const float WAVE_STRENGTH_Y = 0.1;
const float WAVE_STRENGTH_Z = 0.3;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
	VERTEX.x += VERTEX.y * WAVE_STRENGTH_X * sin(TIME * WAVE_SPEED);
	VERTEX.y += VERTEX.y * WAVE_STRENGTH_Y * sin(TIME * WAVE_SPEED);
	VERTEX.z += VERTEX.y * WAVE_STRENGTH_Z * sin(TIME * WAVE_SPEED);
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA *= albedo.a * albedo_tex.a;
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor_threshold;
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_fs28q")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/alpha_scissor_threshold = 0.001
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_88ea0")
