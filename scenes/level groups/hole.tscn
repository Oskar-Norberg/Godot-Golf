[gd_scene load_steps=12 format=3 uid="uid://d2s65plx0h5fy"]

[ext_resource type="Script" path="res://scripts/hole.gd" id="1_7d6aw"]
[ext_resource type="Material" uid="uid://capwlvd6rcg5s" path="res://materials/wood.tres" id="1_qid2p"]
[ext_resource type="AudioStream" uid="uid://certrs0igt40c" path="res://assets/audio/sound/audience_clapping.mp3" id="2_q6l68"]
[ext_resource type="Script" path="res://scripts/hole_camera.gd" id="4_h2coe"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_dfwcf"]
height = 0.2
radius = 0.2

[sub_resource type="CylinderMesh" id="CylinderMesh_xyud7"]
top_radius = 0.025
bottom_radius = 0.025
height = 1.0

[sub_resource type="Shader" id="Shader_d8cr1"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

const float WAVE_SPEED = 0.6;
const float WAVE_STRENGTH_X = 4.0;
const float WAVE_STRENGTH_Z = 2.0;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	if (VERTEX.y > 0.1){
		VERTEX.y += (VERTEX.y) * WAVE_STRENGTH_X/8.0 * sin(TIME * WAVE_SPEED);
		VERTEX.z += (VERTEX.y) *WAVE_STRENGTH_Z/10.0 * cos(TIME * WAVE_SPEED);
	}
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_oi8pd"]
render_priority = 0
shader = SubResource("Shader_d8cr1")
shader_parameter/albedo = Color(1, 0, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="PrismMesh" id="PrismMesh_d7loh"]
material = SubResource("ShaderMaterial_oi8pd")
size = Vector3(0.025, 0.29, 0.19)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_orjo6"]
albedo_color = Color(0, 0, 0, 1)

[sub_resource type="CylinderMesh" id="CylinderMesh_ag2ke"]
material = SubResource("StandardMaterial3D_orjo6")
top_radius = 0.2
bottom_radius = 0.2
height = 0.2

[node name="Hole" type="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0748383, 0)
collision_mask = 2
script = ExtResource("1_7d6aw")

[node name="ClappingAudioPlayer" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("2_q6l68")
volume_db = -5.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CylinderShape3D_dfwcf")

[node name="Flagpole" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
mesh = SubResource("CylinderMesh_xyud7")
surface_material_override/0 = ExtResource("1_qid2p")

[node name="Flag" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.897639, 0.155447)
mesh = SubResource("PrismMesh_d7loh")

[node name="BlackHole" type="MeshInstance3D" parent="."]
mesh = SubResource("CylinderMesh_ag2ke")

[node name="SpringArm3D" type="SpringArm3D" parent="."]
transform = Transform3D(-4.37114e-08, 0.5, -0.866025, 0, 0.866025, 0.5, 1, 2.18557e-08, -3.78552e-08, 0, 0.5, 0)
spring_length = 3.0

[node name="HoleCamera" type="Camera3D" parent="SpringArm3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3)
script = ExtResource("4_h2coe")

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
